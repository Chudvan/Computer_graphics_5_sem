class matrix:

public:
	double** m;
	matrix(){
		m = new double*[4];
		for (int i = 0; i < 4; ++i){
			m[i] = new double[4];
			for (int j = 0; j < 4; ++j){
				m[i][j] = 0.0;
			}
		}
	}
	
	matrix(int n){
		m = new double*[4];
		for (int i = 0; i < 4; ++i){
			m[i] = new double[4];
			for (int j = 0; j < 4; j++){
				m[i][j] = 0.0;
			}
		}
		m[3][2] = n;
		m[0][0] = 1;
		m[1][1] = 1;
		m[3][3] = 1;
	}
	matrix(int t, int n){
		m = new double*[4];
		for (int i = 0; i < 4; ++i) {
			m[i] = new double[4];
			for (int j = 0; j < 4; ++j) {
				m[i][j] = 0.0;
			}
		}
		m[2][3] = 1.0 / n;
		m[3][2] = n;
		m[0][0] = 1;
		m[1][1] = 1;
		m[3][3] = 1;
	}
	matrix(double x, double y, double z, double fi){
		m = new double*[4];
		for (int i = 0; i < 4; i++){
			m[i] = new double[4];
		}
		double r = sqrt(x*x + y*y + z*z);
		double nx = x / r;
		double ny = y / r;
		double nz = z / r;
		m[0][0] = cos(fi) + nx * nx * (1 - cos(fi));
		m[0][1] = nz * sin(fi) + nx * ny * (1 - cos(fi));
		m[0][2] =
		m[0][3] =
		//Допишу, когда прошарю за матрицу родригеса
	}
	~matrix(){
		for (int i = 0; i < 4; i++){
			delete[] m[i];
		}
		delete[] m;
	}
	matrix(double x, double y, double z, double fi){
		m = new double*[4];
		for (int i = 0; i < 4; i++){
			m[i] = new double[4];
		}
		double r = sqrt(x * x + y * y + z * z);
		double nx = x / r;
		double ny = y / r;
		double nz = z / r;
		m[0][0] = cos(fi) + nx * nx * (1 - cos(fi));
		m[0][1] = nz * sin(fi) + nx * ny * (1 - cos(fi));
		m[0][2] = -ny * sin(fi) + nx * nz * (1 - cos(fi));
		m[0][3] = 0;
		m[1][0] = nx * ny * (1 - cos(fi)) - nz * sin(fi);
		m[1][1] = cos(fi) + ny * ny * (1 - cos(fi));
		m[1][2] = nx * sin(fi) + ny * nz * (1 - cos(fi));
		m[1][3] = 0;
		m[2][0] = ny * sin(fi) + nx * nz * (1 - cos(fi));
		m[2][1] = -nx * sin(fi) + ny * nz * (1 - cos(fi));
		m[2][2] = cos(fi) + nz * nz * (1 - cos(fi));
		m[2][3] = 0;
		m[3][0] = 0;
		m[3][1] = 0;
		m[3][2] = 0;
		m[3][3] = 1;
	}
	
	~matrix(){
		for (int i = 0; i < n; i++){
			delete[] m[i];
		}
		delete[] m;
	}
	
	matrix mul(matrix a){
		matrix res;
		for (int i = 0; i < 4; i++){
			for (int j = 0; j < 4; j++){
				for (int k = 0; k < 4; k++){
					res.m[i][j] += this->m[i][k] * a.m[k][j];
				}
			}
		}
		return res;
	}
	
	